// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_Project.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITI_Project.DAL.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Category = "Programming",
                            InstructorId = 1,
                            Name = "C# Basics"
                        },
                        new
                        {
                            CourseId = 2,
                            Category = "Web Development",
                            InstructorId = 1,
                            Name = "ASP.NET Core"
                        },
                        new
                        {
                            CourseId = 3,
                            Category = "Database",
                            InstructorId = 2,
                            Name = "SQL Fundamentals"
                        });
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GradeId");

                    b.HasIndex("SessionId");

                    b.HasIndex("TraineeId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            SessionId = 1,
                            TraineeId = 2,
                            Value = 85m
                        },
                        new
                        {
                            GradeId = 2,
                            SessionId = 1,
                            TraineeId = 3,
                            Value = 90m
                        },
                        new
                        {
                            GradeId = 3,
                            SessionId = 2,
                            TraineeId = 2,
                            Value = 78m
                        });
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("CourseId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            SessionId = 1,
                            CourseId = 1,
                            EndDate = new DateTime(2025, 9, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 2,
                            CourseId = 2,
                            EndDate = new DateTime(2025, 9, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 9, 14, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3,
                            CourseId = 3,
                            EndDate = new DateTime(2025, 9, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 9, 16, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@iti.com",
                            Name = "Admin User",
                            Role = 0
                        },
                        new
                        {
                            UserId = 2,
                            Email = "omar@iti.com",
                            Name = "Omar Khaled",
                            Role = 2
                        },
                        new
                        {
                            UserId = 3,
                            Email = "laila@iti.com",
                            Name = "Laila Hassan",
                            Role = 2
                        });
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Course", b =>
                {
                    b.HasOne("ITI_Project.DAL.Models.User", "Instructor")
                        .WithMany("CoursesTaught")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Grade", b =>
                {
                    b.HasOne("ITI_Project.DAL.Models.Session", "Session")
                        .WithMany("Grades")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITI_Project.DAL.Models.User", "Trainee")
                        .WithMany("Grades")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Session", b =>
                {
                    b.HasOne("ITI_Project.DAL.Models.Course", "Course")
                        .WithMany("Sessions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Course", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Session", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.User", b =>
                {
                    b.Navigation("CoursesTaught");

                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
