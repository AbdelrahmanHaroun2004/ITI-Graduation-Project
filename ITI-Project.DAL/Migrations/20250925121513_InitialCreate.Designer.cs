// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_Project.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250925121513_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITI_Project.DAL.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 2001,
                            Category = "Programming",
                            InstructorId = 201,
                            Name = "C# Basics"
                        },
                        new
                        {
                            CourseId = 2002,
                            Category = "Web Development",
                            InstructorId = 201,
                            Name = "ASP.NET Core"
                        },
                        new
                        {
                            CourseId = 2003,
                            Category = "Database",
                            InstructorId = 202,
                            Name = "SQL Fundamentals"
                        },
                        new
                        {
                            CourseId = 2004,
                            Category = "ORM",
                            InstructorId = 202,
                            Name = "Entity Framework"
                        },
                        new
                        {
                            CourseId = 2005,
                            Category = "Frontend",
                            InstructorId = 203,
                            Name = "HTML & CSS"
                        },
                        new
                        {
                            CourseId = 2006,
                            Category = "Frontend",
                            InstructorId = 203,
                            Name = "JavaScript"
                        },
                        new
                        {
                            CourseId = 2007,
                            Category = "Frontend",
                            InstructorId = 203,
                            Name = "React Basics"
                        },
                        new
                        {
                            CourseId = 2008,
                            Category = "Programming",
                            InstructorId = 204,
                            Name = "Python Basics"
                        },
                        new
                        {
                            CourseId = 2009,
                            Category = "Web Development",
                            InstructorId = 204,
                            Name = "Django"
                        },
                        new
                        {
                            CourseId = 2010,
                            Category = "Programming",
                            InstructorId = 201,
                            Name = "Java OOP"
                        },
                        new
                        {
                            CourseId = 2011,
                            Category = "Web Development",
                            InstructorId = 201,
                            Name = "Spring Boot"
                        },
                        new
                        {
                            CourseId = 2012,
                            Category = "Database",
                            InstructorId = 202,
                            Name = "NoSQL Databases"
                        },
                        new
                        {
                            CourseId = 2013,
                            Category = "Tools",
                            InstructorId = 204,
                            Name = "DevOps Basics"
                        },
                        new
                        {
                            CourseId = 2014,
                            Category = "Cloud",
                            InstructorId = 204,
                            Name = "Cloud Fundamentals"
                        },
                        new
                        {
                            CourseId = 2015,
                            Category = "Management",
                            InstructorId = 202,
                            Name = "Agile Methodologies"
                        },
                        new
                        {
                            CourseId = 2016,
                            Category = "QA",
                            InstructorId = 203,
                            Name = "Unit Testing"
                        });
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GradeId");

                    b.HasIndex("SessionId");

                    b.HasIndex("TraineeId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            SessionId = 3001,
                            TraineeId = 301,
                            Value = 85m
                        },
                        new
                        {
                            GradeId = 2,
                            SessionId = 3001,
                            TraineeId = 302,
                            Value = 90m
                        },
                        new
                        {
                            GradeId = 3,
                            SessionId = 3002,
                            TraineeId = 301,
                            Value = 78m
                        },
                        new
                        {
                            GradeId = 4,
                            SessionId = 3003,
                            TraineeId = 303,
                            Value = 88m
                        },
                        new
                        {
                            GradeId = 5,
                            SessionId = 3004,
                            TraineeId = 304,
                            Value = 82m
                        },
                        new
                        {
                            GradeId = 6,
                            SessionId = 3005,
                            TraineeId = 305,
                            Value = 91m
                        },
                        new
                        {
                            GradeId = 7,
                            SessionId = 3006,
                            TraineeId = 306,
                            Value = 79m
                        },
                        new
                        {
                            GradeId = 8,
                            SessionId = 3007,
                            TraineeId = 307,
                            Value = 84m
                        },
                        new
                        {
                            GradeId = 9,
                            SessionId = 3008,
                            TraineeId = 308,
                            Value = 95m
                        },
                        new
                        {
                            GradeId = 10,
                            SessionId = 3009,
                            TraineeId = 309,
                            Value = 87m
                        },
                        new
                        {
                            GradeId = 11,
                            SessionId = 3010,
                            TraineeId = 310,
                            Value = 93m
                        },
                        new
                        {
                            GradeId = 12,
                            SessionId = 3011,
                            TraineeId = 311,
                            Value = 81m
                        },
                        new
                        {
                            GradeId = 13,
                            SessionId = 3012,
                            TraineeId = 312,
                            Value = 77m
                        },
                        new
                        {
                            GradeId = 14,
                            SessionId = 3013,
                            TraineeId = 313,
                            Value = 85m
                        },
                        new
                        {
                            GradeId = 15,
                            SessionId = 3014,
                            TraineeId = 301,
                            Value = 90m
                        },
                        new
                        {
                            GradeId = 16,
                            SessionId = 3015,
                            TraineeId = 302,
                            Value = 92m
                        },
                        new
                        {
                            GradeId = 17,
                            SessionId = 3016,
                            TraineeId = 303,
                            Value = 86m
                        },
                        new
                        {
                            GradeId = 18,
                            SessionId = 3012,
                            TraineeId = 304,
                            Value = 80m
                        },
                        new
                        {
                            GradeId = 19,
                            SessionId = 3013,
                            TraineeId = 305,
                            Value = 89m
                        },
                        new
                        {
                            GradeId = 20,
                            SessionId = 3014,
                            TraineeId = 306,
                            Value = 83m
                        });
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("CourseId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            SessionId = 3001,
                            CourseId = 2001,
                            EndDate = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 9, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3002,
                            CourseId = 2002,
                            EndDate = new DateTime(2025, 10, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 9, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3003,
                            CourseId = 2003,
                            EndDate = new DateTime(2025, 10, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 9, 28, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3004,
                            CourseId = 2004,
                            EndDate = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 9, 29, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3005,
                            CourseId = 2005,
                            EndDate = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3006,
                            CourseId = 2006,
                            EndDate = new DateTime(2025, 10, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3007,
                            CourseId = 2007,
                            EndDate = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 2, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3008,
                            CourseId = 2008,
                            EndDate = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3009,
                            CourseId = 2009,
                            EndDate = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3010,
                            CourseId = 2010,
                            EndDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3011,
                            CourseId = 2011,
                            EndDate = new DateTime(2025, 10, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3012,
                            CourseId = 2012,
                            EndDate = new DateTime(2025, 10, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3013,
                            CourseId = 2013,
                            EndDate = new DateTime(2025, 10, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3014,
                            CourseId = 2014,
                            EndDate = new DateTime(2025, 10, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3015,
                            CourseId = 2015,
                            EndDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            SessionId = 3016,
                            CourseId = 2016,
                            EndDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2025, 10, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 101,
                            Email = "admin@iti.com",
                            Name = "Admin User",
                            Role = 0
                        },
                        new
                        {
                            UserId = 201,
                            Email = "mohamed@iti.com",
                            Name = "Mohamed Ali",
                            Role = 1
                        },
                        new
                        {
                            UserId = 202,
                            Email = "sara@iti.com",
                            Name = "Sara Nabil",
                            Role = 1
                        },
                        new
                        {
                            UserId = 203,
                            Email = "ahmed@iti.com",
                            Name = "Ahmed Samir",
                            Role = 1
                        },
                        new
                        {
                            UserId = 204,
                            Email = "nour@iti.com",
                            Name = "Nour Adel",
                            Role = 1
                        },
                        new
                        {
                            UserId = 301,
                            Email = "omar@iti.com",
                            Name = "Omar Khaled",
                            Role = 2
                        },
                        new
                        {
                            UserId = 302,
                            Email = "laila@iti.com",
                            Name = "Laila Hassan",
                            Role = 2
                        },
                        new
                        {
                            UserId = 303,
                            Email = "karim@iti.com",
                            Name = "Karim Tarek",
                            Role = 2
                        },
                        new
                        {
                            UserId = 304,
                            Email = "huda@iti.com",
                            Name = "Huda Fathy",
                            Role = 2
                        },
                        new
                        {
                            UserId = 305,
                            Email = "youssef@iti.com",
                            Name = "Youssef Adel",
                            Role = 2
                        },
                        new
                        {
                            UserId = 306,
                            Email = "mona@iti.com",
                            Name = "Mona Samy",
                            Role = 2
                        },
                        new
                        {
                            UserId = 307,
                            Email = "tamer@iti.com",
                            Name = "Tamer Wael",
                            Role = 2
                        },
                        new
                        {
                            UserId = 308,
                            Email = "rana@iti.com",
                            Name = "Rana Hussein",
                            Role = 2
                        },
                        new
                        {
                            UserId = 309,
                            Email = "hassan@iti.com",
                            Name = "Hassan Yasser",
                            Role = 2
                        },
                        new
                        {
                            UserId = 310,
                            Email = "mai@iti.com",
                            Name = "Mai Salah",
                            Role = 2
                        },
                        new
                        {
                            UserId = 311,
                            Email = "ali@iti.com",
                            Name = "Ali Fawzy",
                            Role = 2
                        },
                        new
                        {
                            UserId = 312,
                            Email = "salma@iti.com",
                            Name = "Salma Ibrahim",
                            Role = 2
                        },
                        new
                        {
                            UserId = 313,
                            Email = "mostafa@iti.com",
                            Name = "Mostafa Hany",
                            Role = 2
                        });
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Course", b =>
                {
                    b.HasOne("ITI_Project.DAL.Models.User", "Instructor")
                        .WithMany("CoursesTaught")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Grade", b =>
                {
                    b.HasOne("ITI_Project.DAL.Models.Session", "Session")
                        .WithMany("Grades")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITI_Project.DAL.Models.User", "Trainee")
                        .WithMany("Grades")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Session", b =>
                {
                    b.HasOne("ITI_Project.DAL.Models.Course", "Course")
                        .WithMany("Sessions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Course", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.Session", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("ITI_Project.DAL.Models.User", b =>
                {
                    b.Navigation("CoursesTaught");

                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
